/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        lt: lt {
            compatible = "zmk,behavior-hold-tap";
            label = "LT";
            bindings = <&to>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
        };
    };

    macros {
        format_code: format_code {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "FORMAT_CODE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp Q             &kp W  &kp E  &kp R             &kp T      &kp TAB        &kp BSPC     &kp Y            &kp U     &kp I      &kp O                 &kp P
&kp A             &kp S  &kp D  &kp F             &kp G      &kp LCTRL      &kp SQT      &kp H            &kp J     &kp K      &kp L                 &kp SEMI
&mt LEFT_SHIFT Z  &kp X  &kp C  &kp V             &kp B      &td0           &kp ESC      &kp N            &kp M     &kp COMMA  &mt RIGHT_ALT PERIOD  &mt RIGHT_SHIFT FSLH
                                &mt LCTRL ESCAPE  &lt 1 TAB  &lt 3 ENTER    &lt 4 SPACE  &lt 2 BACKSPACE  &kp RALT
            >;
        };

        lower_layer {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE        &kp LG(L)    &kp LS(LA(F))  &kp BACKSPACE   &kp DELETE       &kp N5             &kp N6            &kp PIPE          &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &kp F11               &kp F12
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH       &kp DOLLAR      &kp PERCENT      &bt BT_SEL 3       &kp LEFT          &kp CARET         &kp AMPS           &kp ASTRK         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp EQUAL        &kp MINUS    &kp PLUS       &kp LEFT_BRACE  &kp RIGHT_BRACE  &rgb_ug RGB_EFF    &kp LEFT_BRACKET  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON     &kp COLON             &kp BACKSLASH
                                             &trans          &trans           &trans             &trans            &trans            &trans
            >;
        };

        raise_layer {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LEFT_BRACKET  &kp N7        &kp N8        &kp N9        &kp RIGHT_BRACKET  &kp PRCNT    &trans     &kp PIPE        &trans          &kp UP_ARROW      &trans           &trans
&kp SEMICOLON     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL          &none        &kp MINUS  &kp QUESTION    &kp LEFT_ARROW  &kp DOWN_ARROW    &kp RIGHT_ARROW  &kp DELETE
&kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH      &none        &kp UNDER  &kp UNDERSCORE  &kp EQUAL       &kp GREATER_THAN  &kp LEFT_BRACE   &kp RIGHT_BRACE
                                              &trans        &trans             &kp SPACE    &kp RET    &trans          &trans
            >;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&trans        &kp F7  &kp F8  &kp F9  &kp F10  &kp F5         &kp F6       &kp F7        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS
&kp LEFT_WIN  &kp F4  &kp F5  &kp F6  &kp F11  &bootloader    &bootloader  &kp DOT       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS
&kp LEFT_ALT  &kp F1  &kp F2  &kp F3  &kp F12  &trans         &trans       &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_ENTER
                              &trans  &trans   &trans         &trans       &trans        &trans
            >;
        };

        layer_4 {
            bindings = <
&rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_EFF  &rgb_ug RGB_COLOR_HSB(292,100,50)  &trans    &trans  &kp C_PLAY_PAUSE  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP  &trans
&bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                       &trans    &trans  &kp CAPSLOCK      &trans      &trans        &trans           &trans
&bl BL_TOG       &bl BL_INC       &bl BL_DEC       &rgb_ug RGB_BRI  &rgb_ug RGB_BRD                    &trans    &trans  &kp INS           &trans      &trans        &trans           &trans
                                                   &trans           &trans                             &trans    &trans  &trans            &trans
            >;
        };
    };
};
